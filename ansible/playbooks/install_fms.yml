---
- hosts: all
  become: true
  #strategy: free
  vars:
    fms_url: "{{ 'https://downloads.claris.com/esd/fms_20.2.1.19_Ubuntu22_amd64.zip' if ansible_architecture == 'x86_64' else 'https://downloads.claris.com/esd/fms_20.2.1.19_Ubuntu22_arm64.zip' }}"
    disks: [
      {'dev': 'sdb', 'disk_path': 'container'}, 
      {'dev': 'sdc', 'disk_path': 'backup'}, 
      {'dev': 'sdd', 'disk_path': 'data'}
      ]
      
  tasks:

    - name: Installing Unzip
      ansible.builtin.apt:
            name: unzip
            state: present
    
    - name: Copying local Assitsed install to server
      copy:
        src: "../../files/Assisted_install.txt"
        dest: "/tmp/Assisted_install.txt"
        owner: root
        group: root
        mode: "0644"

    - debug: var=fms_url

    - name: Downloading and unziping FMS 
      unarchive:
        src: "{{ fms_url }}"
        dest: /tmp
        remote_src: True
        list_files: yes
      register: unarchive_result
    
#    - debug: var=unarchive_result

    - name: Upgrade all apt packages
      apt: upgrade=dist

    - name: Installing FMS
      shell: apt-get -y install "/tmp/{{ unarchive_result.files[0] }}"
      environment:
        DEBIAN_FRONTEND: noninteractive
        FM_ASSISTED_INSTALL: "/tmp/Assisted_install.txt"

    - name: restart FMS
      service:
         name: fmshelper
         state: restarted
         enabled: yes

    - name: Creating basedir for mounting disks
      ansible.builtin.file:
        path: /fms-data
        state: directory
        owner: root
        group: root

    - name: Creating dirs for mounting disk
      ansible.builtin.file:
        path: "/fms-data/{{ item.disk_path }}"
        state: directory
        owner: fmserver
        group: fmsadmin
      loop: '{{ disks }}'
    